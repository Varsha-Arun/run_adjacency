resources:
  - name: runVariableResource
    type: PropertyBag
    configuration:
      testRunVariable: test

pipelines:
  
  - name: S_WF_033runVariable
    steps:
  
      - name: S_WF_033_001bash
        type: Bash
        execution:
          onExecute:
            - echo "Step 1 is running"
            - add_run_variables step_1_var="onStart"
  
      - name: S_WF_033_002bash
        type: Bash
        configuration:
          inputSteps:
            - name: S_WF_033_001bash
        execution:
          onStart:
            - add_run_variables step_2_var="onStart"
            - mkdir -p preState
            - echo "working" >> preState/working.txt
            - add_run_files preState/working.txt myfilesOnstart
          onExecute:
            - echo "Step 2 is running"
            - add_run_variables step_2_varOnExecute="onExecute"
            - mkdir -p preState
            - echo "working" >> preState/working1.txt
            - add_run_files preState/working1.txt myfilesOnExecute
          onComplete:
            - add_run_variables step_2_varOnComplete="onComplete"
            - echo "working" >> preState/working2.txt
            - add_run_files preState/working2.txt myfilesOnComplete

      - name: S_WF_033_002matrix
        type: Matrix
        configuration:
          inputSteps:
            - name: S_WF_033_001bash
        stepletMultipliers:
          environmentVariables:
            - name: test
              name2: test2
            - type: step
              type2: step2
              type3: step3
        execution:
          onStart:
            - add_run_variables step_2_var_matrix="onStart"
            - mkdir -p matrix1onState
            - echo "working" >> matrix1onState/working.txt
            - add_run_files matrix1onState/working.txt myfilesOnstartMatrix_${steplet_id}
          onExecute:
            - echo "Step 2 is running"
            - add_run_variables step_2_varOnExecute_matrix="onExecute"
            - mkdir -p matrix1onExecute
            - echo "working" >> matrix1onExecute/working1.txt
            - add_run_files matrix1onExecute/working1.txt myfilesOnExecuteMatrix_${steplet_id}
          onComplete:
            - add_run_variables step_2_varOnComplete_matrix="onComplete"
            - echo "working" >> matrix1onComplete/working2.txt
            - add_run_files matrix1onComplete/working2.txt myfilesOnCompleteMatrix_${steplet_id}
            
      - name: S_WF_033_003bash
        type: Bash
        configuration:
          inputSteps:
            - name: S_WF_033_001bash
            - name: S_WF_033_002matrix
        execution:
          onExecute:
            - echo "Step 3 is running"
            - echo $step_2_var_matrix
            - echo $step_2_varOnExecute_matrix
            - echo $step_2_varOnComplete_matrix
            - echo $step_1_var
            - ls -latr S_WF_033_002matrix/matrix1onState
            - ls -latr S_WF_033_002matrix/matrix1onExecute
            - ls -latr S_WF_033_002matrix/matrix1onComplete
            
  
      - name: S_WF_033_004bash
        type: Bash
        configuration:
          inputSteps:
            - name: S_WF_033_001bash
          affinityGroup: some_ag
        execution:
          onStart:
            - add_run_variables step_4_var="step4"
          onExecute:
            - echo "Step 4 is running"
  
      - name: S_WF_033_005bas
        type: Bash
        configuration:
          inputSteps:
            - name: S_WF_033_002bash
            - name: S_WF_033_004bash
          affinityGroup: some_ag
        execution:
          onStart:
            - if [[ "$step_2_var" != "onStart" ]]; then exit 1; fi
            - if [[ "$step_4_var" != "step4" ]]; then exit 1; fi
            - if [[ "$step_2_varOnExecute" != "onExecute" ]]; then exit 1; fi
            - if [[ "$step_2_varOnComplete" != "onComplete" ]]; then exit 1; fi
          onExecute:
            - echo "Step 5 is running"
            - echo "step_2_var - ${step_2_var}"
            - echo "step_4_var - ${step_4_var}"
            - echo step_2_varOnExecute=$step_2_varOnExecute
            - echo step_2_varOnComplete=$step_2_varOnComplete
            - if [[ "$step_2_var" != "onStart" ]]; then exit 1; fi
            - if [[ "$step_4_var" != "step4" ]]; then exit 1; fi
            - if [[ "$step_2_varOnExecute" != "onExecute" ]]; then exit 1; fi
            - if [[ "$step_2_varOnComplete" != "onComplete" ]]; then exit 1; fi
            
  
      - name: S_WF_033_006bas
        type: Bash
        configuration:
          inputSteps:
            - name: S_WF_033_005bas
          affinityGroup: some_ag
        execution:
          onExecute:
            - echo "Step 6 is running"
            - restore_run_files myfilesOnState preStateTest1
            - restore_run_files myfilesOnExecute preState2
            - restore_run_files myfilesOnComplete preState3
            - if [[ "$step_2_var" != "onStart" ]]; then exit 1; fi
            - if [[ "$step_4_var" != "step4" ]]; then exit 1; fi
            - if [[ "$step_2_varOnExecute" != "onExecute" ]]; then exit 1; fi
            - if [[ "$step_2_varOnComplete" != "onComplete" ]]; then exit 1; fi
          onComplete:
            - echo "Step 6 is running"
            - if [[ "$step_2_var" != "onStart" ]]; then exit 1; fi
            - if [[ "$step_4_var" != "step4" ]]; then exit 1; fi
            - if [[ "$step_2_varOnExecute" != "onExecute" ]]; then exit 1; fi
            - if [[ "$step_2_varOnComplete" != "onComplete" ]]; then exit 1; fi

  - name: runVariablePipeline
    steps:
  
      - name: step1arv
        type: Bash
        execution:
          onExecute:
            - echo "Step 1 is running"
            - add_run_variables step1="onExecuteFirst"
  
      - name: step2arv
        type: Bash
        configuration:
          inputSteps:
            - name: step1arv
        execution:
          onExecute:
            - echo "Step 2 is running"
  
      - name: step3arv
        type: Bash
        configuration:
          inputSteps:
            - name: step1arv
        execution:
          onStart:
            - if [[ "$step1" != "onExecuteFirst" ]]; then exit 1; fi
            - add_run_variables step1="onStartUpdated"
            - add_run_variables testStep3onStart="col2"
          onExecute:
            - if [[ "$step1" != "onStartUpdated" ]]; then exit 1; fi
            - echo "Step 3 is running"
            - echo step1=$step1
            - step1=updatedInStep
  
      - name: step4arv
        type: Bash
        configuration:
          inputSteps:
            - name: step3arv
          affinityGroup: testarv
        execution:
          onExecute:
            - if [[ "$step1" != "onStartUpdated" ]]; then exit 1; fi
            - echo "Step 3 is running"
            - echo step1=$step1
            - step1=updatedInStep
            - echo step1=$step1
            - add_run_variables testStep4="col3"
            
      - name: step5arv
        type: Bash
        configuration:
          outputResources:
            - name: runVariableResource
          inputSteps:
            - name: step4arv
          affinityGroup: testarv
        execution:
          onExecute:
            - if [[ "$step1" != "onStartUpdated" ]]; then exit 1; fi
            - echo "Step 5 is running"
            - echo "testStep4 - ${testStep4}"
            - echo "testStep3onStart - ${testStep3onStart}"
            - if [ "$testStep4" != "col3" ]; then exit 1; fi
            - if [ "$testStep3onStart" != "col2" ]; then exit 1; fi
            - write_output runVariableResource "testRunVariable=updated"
  
      - name: step6arv
        type: Bash
        configuration:
          inputResources:
            - name: runVariableResource
          affinityGroup: testarv1
        execution:
          onExecute:
            - if [[ "$step1" != "onStartUpdated" ]]; then exit 1; fi
            - echo "Step 6 is running"
            - echo "testStep4 - ${testStep4}"
            - echo "testStep3onStart - ${testStep3onStart}"
            - if [ "$testStep4" != "col3" ]; then exit 1; fi
            - if [ "$testStep3onStart" != "col2" ]; then exit 1; fi
            - echo $res_runVariableResource_testRunVariable
            - if [ "$res_runVariableResource_testRunVariable" != "updated" ]; then exit 1; fi  
