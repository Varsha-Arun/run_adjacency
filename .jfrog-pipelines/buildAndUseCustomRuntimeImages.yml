resources:
  - name: gitRepo_push_image_artifactory
    type: GitRepo
    configuration:
      gitProvider: varsha_github
      path: Varsha-Arun/run_adjacency
      branches:  # optional
        include: master

pipelines:

  - name: push_image_to_artifactory_pipeline
    configuration:
      environmentVariables:
        readOnly:
          image_tag: latest
    steps:
      - name: push_image_to_artifactory_step
        type: Bash
        configuration:
          inputResources:
            - name: gitRepo_push_image_artifactory
          integrations:
            - name: s_artifactory
        execution:
          onExecute:
            - printenv
            - echo $image_tag
            - echo $artifactoryRegistry_url
            - pushd $res_gitRepo_push_image_artifactory_resourcePath
            - docker build -t $artifactoryRegistry_url/test-automation-docker-local/jfreq:$image_tag .
            - jfrog rt c entplus --url=$int_s_artifactory_url --user=$int_s_artifactory_user --apikey=$int_s_artifactory_apikey
            - jfrog rt docker-push $artifactoryRegistry_url/test-automation-docker-local/jfreq:$image_tag test-automation-docker-local

  - name: custom_image_from_artifactory_pipeline
    configuration:
      environmentVariables:
        readOnly:
          image_tag: latest
      runtime:
        type: image
        image:
          custom:
            registry: s_artifactory
            sourceRepository: test-automation-docker-local
            name: ${artifactoryRegistry_url}/test-automation-docker-local/jfreq
            tag: $image_tag
            autoPull: true
    steps:
      - name: custom_image_from_artifactory_step
        type: Bash
        execution:
          onExecute:
            - printenv
            - echo $image_tag
            - echo $artifactoryRegistry_url
            -  if ! [[ "$step_image_name" =~ "test-automation-docker-local/jfreq" ]]; then return 1; fi
