pipelines:


  - name: pipelineConditionWorkflowAllowFailure
    steps:
      - name: allowfailure1step
        type: Bash
        execution:
          onExecute:
            - echo "executing step..."
            - failure ok

      - name: allowFailure2step
        type: Bash
        configuration:
          allowFailure: true
          inputSteps:
            - name: allowfailure1step
              status: 
                - failure
        execution:
          onExecute:
            - echo "Even above step failed. we are not skipping this step"
            - echo "Run status should be failure only even though this step passes"
            - echo $key
            - sleep 10
            

  - name: pipelineConditionWorkflowWithStatuses
    steps:
      - name: WithStatusSuccess
        type: Bash
        execution:
          onExecute:
            - echo "executing step..."

      - name: WithStatusFailure
        type: Bash
        configuration:
          inputSteps:
            - name: WithStatusSuccess
        execution:
          onExecute:
            - echo "executing step..."
            - failure ok

      - name: WithStatusSkipped
        type: Bash
        configuration:
          condition: 'test == ok'
          inputSteps:
            - name: WithStatusSuccess
        execution:
          onExecute:
            - echo "executing step..."

            
      - name: WithStatusError
        type: Bash
        configuration:
          condition: 'test == ok'
          inputSteps:
            - name: WithStatusSuccess
        execution:
          onExecute:
            - echo "executing step..."
            
      - name: WithStatusTimeout
        type: Bash
        configuration:
          timeoutSeconds: 30
          inputSteps:
            - name: WithStatusSuccess
        execution:
          onExecute:
            - echo "executing step..."
            - sleep 10m
            
      - name: finalStepStatus
        type: Bash
        configuration:
          inputSteps:
            - name: WithStatusFailure
              status: 
                - failure
            - name: WithStatusSuccess
            - name: WithStatusError
              status:
                - error
            - name: WithStatusTimeout
              status: 
                - timeout
            - name: WithStatusSkipped
              status: 
                - skipped
            #not testing for unstable and cancelled
        execution:
          onExecute:
            - echo "allow all status "
            
  - name: pipelineConditionVariable
    steps:
      - name: cv1step
        type: Bash
        execution:
          onExecute:
            - echo "executing step..."
            - add_run_variables "testauto=value"

      - name: cvEnvVar2step
        type: Bash
        configuration:
          environmentVariables:
              new_env:
                default: 2
          condition: 'new_env == 2'
          inputSteps:
            - name: cv1step
        execution:
          onExecute:
            - echo "executing step..."
            - echo $testauto
            - sleep 10
            
      - name: cvRunVar3step
        type: Bash
        configuration:
          condition: 'testauto == "value"'
          inputSteps:
            - name: cv1step
        execution:
          onExecute:
            - echo "executing step..."
            - echo $testauto
            - sleep 10
