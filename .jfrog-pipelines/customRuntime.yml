resources:
  - name: propertyBag_runtime_c_sanity
    type: PropertyBag
    configuration:
      foo: bar
      foo1: bar1
      foo2: bar2
  - name: step_r_c_s1
    type: PropertyBag
    configuration:
      key: value
  - name: step_r_c_s2
    type: PropertyBag
    configuration:
      key: value
  - name: step_r_c_s3
    type: PropertyBag
    configuration:
      key: value
  - name: step_r_c_s4
    type: PropertyBag
    configuration:
      key: value
  - name: step_r_c_s5
    type: PropertyBag
    configuration:
      key: value

pipelines:
  - name: pipeline_runtime_custom_sanity_adityan
    configuration:
      runtime: 
        type: image
        image: 
          custom:
            name: jfpip.jfrog.io/jfrog/pipelines-tools
            tag: latest
            registry: aditya_ent
            sourceRepository: dev-releases-docker-local
    steps: #step_r_c definiton
      - name: step_r_c_s1
        type: Bash
        configuration:
          affinityGroup: ag1
          inputResources:
            - name: custom_runtime_sanity
        execution:
          onExecute:
            - printenv
            - echo "step executed"
      - name: step_r_c_s2
        type: Bash
        configuration:
          affinityGroup: ag1
          inputSteps: 
            - name: step_r_c_s1
        execution:
          onExecute:
            - echo "Executed step_r_c_s1_1"
            - echo "step executed"
      - name: step_r_c_s3
        type: Bash
        configuration: 
          inputSteps: 
            - name: step_r_c_s2
        execution:
          onExecute:
            - echo "Executed step_r_c_s1_2"
            - echo "step executed"
      - name: step_r_c_s4
        type: Bash
        configuration: 
          priority: 2
          inputSteps: 
            - name: step_r_c_s2
        execution:
          onExecute:
            - echo "step executed"
          onFailure:
            - echo "Timed Out"
      - name: step_r_c_s5
        type: Bash
        configuration: 
          priority: 1
          inputSteps: 
            - name: step_r_c_s2
        execution:
          onExecute:
            - echo "Executed step_r_c_s1_5"
            - echo "step executed"
      - name: step_r_c_s6
        type: Bash
        configuration: 
          inputSteps: 
            - name: step_r_c_s3
            - name: step_r_c_s5
            - name: step_r_c_s4
        execution:
          onExecute:
            - echo "Executed step_r_c_s1_6"
      - name: step_r_c_s7
        type: Bash
        configuration: 
          inputResources:
            - name: mySecondRepo
          inputSteps: 
            - name: step_r_c_s3
            - name: step_r_c_s5
            - name: step_r_c_s6
        execution:
          onExecute:
            - echo "Executed step_r_c_s1_7"
            - echo "step executed"
          onSuccess:
            - echo "Executed Successfully"
      
      - name: approve_sanity
        type: Bash
        configuration:
          runtime:
            type: image
            image: 
              auto:
                language: node
                versions:
                - "16"
          inputSteps:
            - name: step_r_c_s7
          inputResources:
            - name: this_repo
            - name: custom_runtime_sanity
          integrations:
            - name: sanity_platform
        execution:
          onExecute:
            - pushd ${res_this_repo_resourcePath}/scripts
            - npm ci
            - export API_URL="${int_sanity_platform_url}/pipelines/api/v1"
            - export API_TOKEN="Bearer ${int_sanity_platform_accessToken}"
            - node index.js sanityGate --stepName $qualityGateStep --runId $triggerRunId --approved --comment "approved all tests passed"

      - name: reject_sanity
        type: Bash
        configuration:
          runtime: 
            type: image
            image: 
              auto:
                language: node
                versions:
                - "16"
          inputSteps:
            - name: approve_sanity
              status:
                - failure
                - skipped
                - timeout
                - error
                - cancelled
          inputResources:
            - name: this_repo
            - name: custom_runtime_sanity
          integrations:
            - name: sanity_platform
        execution:
          onExecute:
            - pushd ${res_this_repo_resourcePath}/scripts
            - npm ci
            - export API_URL="${int_sanity_platform_url}/pipelines/api/v1"
            - export API_TOKEN="Bearer ${int_sanity_platform_accessToken}"
            - node index.js sanityGate --stepName $qualityGateStep --runId $triggerRunId --comment "rejected because few of the tests failed"
